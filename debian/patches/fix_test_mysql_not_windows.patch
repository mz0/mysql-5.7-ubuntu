Description: Fixes failing test main.mysql_not_windows
 The test sets the server's open file limit to the high value 1M, expecting
 the operation to fail due to it being higher than the system's hard limit,
 but Artful currently has a hard limit of 1048576, the test fails.
 Patch increases the value to 10M
Author: Lars Tangvald <lars.tangvald@oracle.com>
Bug: https://bugs.mysql.com/bug.php?id=86372
Forwarded: not-needed
Last-Update: 2017-05-19

--- mysql-5.7-5.7.18.orig/mysql-test/r/mysql_not_windows.result
+++ mysql-5.7-5.7.18/mysql-test/r/mysql_not_windows.result
@@ -6,10 +6,10 @@ a
 #
 # Filtering out the warning since platforms Solaris and osx set the
 # open_files_limit to too low a value after setrlimit fails to set
-# open_files_limit to 1000000
+# open_files_limit to 10000000
 CALL mtr.add_suppression("innodb_open_files should not be greater than the open_files_limit.");
-SELECT @@open_files_limit = 1000000;
-@@open_files_limit = 1000000
+SELECT @@open_files_limit = 10000000;
+@@open_files_limit = 10000000
 0
 
 End of tests
--- mysql-5.7-5.7.18.orig/mysql-test/t/mysql_not_windows-master.opt
+++ mysql-5.7-5.7.18/mysql-test/t/mysql_not_windows-master.opt
@@ -1 +1 @@
---open_files_limit=1000000
+--open_files_limit=10000000
--- mysql-5.7-5.7.18.orig/mysql-test/t/mysql_not_windows.test
+++ mysql-5.7-5.7.18/mysql-test/t/mysql_not_windows.test
@@ -17,13 +17,13 @@
 --echo #
 --echo # Filtering out the warning since platforms Solaris and osx set the
 --echo # open_files_limit to too low a value after setrlimit fails to set
---echo # open_files_limit to 1000000
+--echo # open_files_limit to 10000000
 
 CALL mtr.add_suppression("innodb_open_files should not be greater than the open_files_limit.");
 
-# .opt file tries to set limit to 1000000, but this should not work
+# .opt file tries to set limit to 10000000, but this should not work
 # so that the SELECT below should return 0.
-SELECT @@open_files_limit = 1000000;
+SELECT @@open_files_limit = 10000000;
 
 --echo
 --echo End of tests
